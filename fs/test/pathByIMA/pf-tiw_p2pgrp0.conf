## GLOBAL OPTIONS 
set block-policy return
set fingerprints "/etc/pf.os"

## Interface skipping
set skip on lo0

## FILTER RULES 

# Block logs (inbound AND outbound on ALL interfaces) by default (catch-all)
block log all

## Blocking on interface
pass in quick on tiw_p2pgrp0 keep state
pass out quick on tiw_p2pgrp0 keep state

####################
# IP Filtering
####################

#Showing the listing in both the forms
table <blockIP> persist file "/fs/mp/etc/pf_blocked_IP.conf"

# RFC 1918 addresses that just shouldn't be floating around the Internet, and
# when they are, are usually trying to cause trouble
table <privnets> { 127.0.0.0/8, 172.16.0.0/12 }

#table <whitelist> {194.164.0.1}

block drop in log  quick on tiw_p2pgrp0 from <privnets> to any label "block inbound privnets ext_if1"
block out log quick on tiw_p2pgrp0 from any to <privnets> label "block outbound privnets ext_if1"

# block both ways on both ip4 and ip6
block log quick inet from <blockIP> to any
block log quick inet from any to <blockIP>
block log quick inet6 from <blockIP> to any
block log quick inet6 from any to <blockIP>

# Whitelist should be added as per request
# pass both ways on both ip4 and ip6
#pass log  inet from <whitelist> to any
#pass log  inet from any to <whitelist>
#pass log  inet6 from <whitelist> to any
#pass log  inet6 from any to <whitelist>


####################
# ICMP POLICIES
####################

# Default ICMP policy
pass out on en0 inet proto icmp all icmp-type echoreq keep state
pass in on en0 proto icmp all
pass in on tiw_p2pgrp0 proto icmp all

# IPv6 ICMP 
# 128  echoreq         Echo service request
# 129  echorep         Echo service reply
# 133  routersol       Router solicitation
# 134  routeradv       Router advertisement
# 135  neighbrsol      Neighbor solicitation
# 136  neighbradv      Neighbor advertisement

# Allow only bare essential icmpv6 packets (NS, NA, and RA, echoreq, echorep)
pass out quick inet6 proto 58 from fe80::/10 to fe80::/10 icmp6-type {129,133,134,135,136} keep state
pass out quick inet6 proto 58 from fe80::/10 to ff02::/16 icmp6-type {129,133,134,135,136} keep state
pass in quick inet6 proto 58 from fe80::/10 to fe80::/10 icmp6-type {128,133,134,135,136} keep state
pass in quick inet6 proto 58 from ff02::/16 to fe80::/10 icmp6-type {128,133,134,135,136} keep state
pass in quick inet6 proto 58 from fe80::/10 to ff02::/16 icmp6-type {128,133,134,135,136} keep state

# Default TCP policy
# Allow in out secure SSH
pass in quick on tiw_p2pgrp0 proto tcp from any to port 22 keep state
pass out quick on tiw_p2pgrp0 proto tcp from port 22 to any keep state

# Allow in out secure Telnet
pass in quick on tiw_p2pgrp0 proto tcp from any to port 23 keep state
pass out quick on tiw_p2pgrp0 proto tcp from port 23 to any keep state

# Allow outbound access to public DNS servers.
pass out quick on tiw_p2pgrp0 proto tcp from any to any port = 53 keep state
pass out quick on tiw_p2pgrp0 proto udp from any to any port = 53 keep state

# Allow access to ISP's specified DHCP server for cable or DSL networks.
pass out log quick on tiw_p2pgrp0 proto udp from any to any port = 67 keep state
pass out log quick on tiw_p2pgrp0 proto udp from any to any port = 68 keep state

#DHCP V6
pass quick on tiw_p2pgrp0 inet6 proto udp from fe80::/10 to fe80::/10 port = 546 keep state label "allow access to DHCPv6 server" 
pass quick on tiw_p2pgrp0 inet6 proto udp from fe80::/10 to ff02::/16 port = 546 keep state label "allow access to DHCPv6 server" 
pass quick on tiw_p2pgrp0 inet6 proto udp from fe80::/10 to ff02::/16 port = 547 keep state label "allow access to DHCPv6 server" 
pass quick on tiw_p2pgrp0 inet6 proto udp from ff02::/16 to fe80::/10 port = 547 keep state label "allow access to DHCPv6 server" 
pass in quick on tiw_p2pgrp0 inet6 proto udp from fe80::/10 to any port = 546 keep state label "allow access to DHCPv6 server" 
pass out quick on tiw_p2pgrp0 inet6 proto udp from any port = 547 to fe80::/10 keep state label "allow access to DHCPv6 server" 

# Allow HTTP and HTTPS
pass out quick on tiw_p2pgrp0 proto tcp from any to any port = 80 keep state
pass out quick on tiw_p2pgrp0 proto tcp from any to any port = 443 keep state

# Allow email
pass out quick on tiw_p2pgrp0 proto tcp from any to any port = 110 keep state
pass out quick on tiw_p2pgrp0 proto tcp from any to any port = 25 keep state

# Allow NTP
pass out quick on tiw_p2pgrp0 proto tcp from any to any port = 37 keep state

# Allow FTP
#add this string--pass in quick on tiw_p2pgrp0 proto tcp from any to any port = 21 keep state
pass in quick on tiw_p2pgrp0 proto tcp from any to port 21 keep state
pass out quick on tiw_p2pgrp0 proto tcp from port 21 to any keep state

# Allow SSH
#add this string--pass in quick on tiw_p2pgrp0 proto tcp from any to any port = 22 keep state
#pass in quick on tiw_p2pgrp0 proto tcp from any to any port = 22 keep state
#pass out quick on tiw_p2pgrp0 proto tcp from any to any port = 22 keep state

# Allow out non-secure standard www function
pass in on tiw_p2pgrp0 proto tcp from any to port 80 keep state
#pass out on tiw_p2pgrp0 proto tcp from port 80 to any keep state

# Allow out non-secure standard www function
pass in on tiw_p2pgrp0 proto tcp from any to port 8080 keep state

# Allow out secure www function https over TLS SSL
pass in on tiw_p2pgrp0 proto tcp from any to port 443 keep state

# Allow out multicast DNS
pass in on tiw_p2pgrp0 proto tcp from any to port 5353:5354 keep state
pass out on tiw_p2pgrp0 proto tcp from port 5353:5354 to any keep state


